|FK_quadrature_decoder
GPIO-1[0] <= uart_tx:inst1.trx
CLOCK_50 => uart_tx:inst1.clock
CLOCK_50 => uart_spammer:inst3.clock
CLOCK_50 => quadrature_decoder_pb:inst.clock
KEY[0] => quadrature_decoder_pb:inst.areset
GPIO-0[0] => quadrature_decoder_pb:inst.Ain
GPIO-0[1] => quadrature_decoder_pb:inst.Bin
LED[0] <= POSITION[0].DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= POSITION[1].DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= POSITION[2].DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= POSITION[3].DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= POSITION[4].DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= POSITION[5].DB_MAX_OUTPUT_PORT_TYPE
LED[6] <= POSITION[6].DB_MAX_OUTPUT_PORT_TYPE
LED[7] <= POSITION[7].DB_MAX_OUTPUT_PORT_TYPE


|FK_quadrature_decoder|uart_tx:inst1
clock => tx_bit_cntr[0].CLK
clock => tx_bit_cntr[1].CLK
clock => tx_bit_cntr[2].CLK
clock => tx_bit_cntr[3].CLK
clock => tx_br_cntr[0].CLK
clock => tx_br_cntr[1].CLK
clock => tx_br_cntr[2].CLK
clock => tx_br_cntr[3].CLK
clock => tx_br_cntr[4].CLK
clock => tx_br_cntr[5].CLK
clock => tx_br_cntr[6].CLK
clock => tx_br_cntr[7].CLK
clock => trx~reg0.CLK
clock => ready~reg0.CLK
clock => tx_state~5.DATAIN
start => tx_state.OUTPUTSELECT
start => tx_state.OUTPUTSELECT
start => tx_state.OUTPUTSELECT
start => tx_state.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => tx_br_cntr.OUTPUTSELECT
start => Selector0.IN0
data[0] => Mux0.IN10
data[1] => Mux0.IN9
data[2] => Mux0.IN8
data[3] => Mux0.IN7
data[4] => Mux0.IN6
data[5] => Mux0.IN5
data[6] => Mux0.IN4
data[7] => Mux0.IN3
trx <= trx~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|FK_quadrature_decoder|uart_spammer:inst3
clock => byte_out[0]~reg0.CLK
clock => byte_out[1]~reg0.CLK
clock => byte_out[2]~reg0.CLK
clock => byte_out[3]~reg0.CLK
clock => byte_out[4]~reg0.CLK
clock => byte_out[5]~reg0.CLK
clock => byte_out[6]~reg0.CLK
clock => byte_out[7]~reg0.CLK
clock => send~reg0.CLK
clock => \spam:prevPos[0].CLK
clock => \spam:prevPos[1].CLK
clock => \spam:prevPos[2].CLK
clock => \spam:prevPos[3].CLK
clock => \spam:prevPos[4].CLK
clock => \spam:prevPos[5].CLK
clock => \spam:prevPos[6].CLK
clock => \spam:prevPos[7].CLK
clock => \spam:prevPos[8].CLK
clock => \spam:prevPos[9].CLK
clock => \spam:prevPos[10].CLK
clock => \spam:prevPos[11].CLK
clock => \spam:prevPos[12].CLK
clock => \spam:prevPos[13].CLK
clock => \spam:prevPos[14].CLK
clock => \spam:prevPos[15].CLK
clock => \spam:state~1.DATAIN
position[0] => spam.IN1
position[0] => prevPos.DATAB
position[1] => spam.IN1
position[1] => prevPos.DATAB
position[2] => spam.IN1
position[2] => prevPos.DATAB
position[3] => spam.IN1
position[3] => prevPos.DATAB
position[4] => spam.IN1
position[4] => prevPos.DATAB
position[5] => spam.IN1
position[5] => prevPos.DATAB
position[6] => spam.IN1
position[6] => prevPos.DATAB
position[7] => spam.IN1
position[7] => prevPos.DATAB
position[8] => spam.IN1
position[8] => prevPos.DATAB
position[9] => spam.IN1
position[9] => prevPos.DATAB
position[10] => spam.IN1
position[10] => prevPos.DATAB
position[11] => spam.IN1
position[11] => prevPos.DATAB
position[12] => spam.IN1
position[12] => prevPos.DATAB
position[13] => spam.IN1
position[13] => prevPos.DATAB
position[14] => spam.IN1
position[14] => prevPos.DATAB
position[15] => spam.IN1
position[15] => prevPos.DATAB
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => byte_out.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => state.OUTPUTSELECT
uart_ready => Selector13.IN4
send <= send~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[0] <= byte_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[1] <= byte_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[2] <= byte_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[3] <= byte_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[4] <= byte_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[5] <= byte_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[6] <= byte_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
byte_out[7] <= byte_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|FK_quadrature_decoder|quadrature_decoder_pb:inst
clock => counterSignal[0].CLK
clock => counterSignal[1].CLK
clock => counterSignal[2].CLK
clock => counterSignal[3].CLK
clock => counterSignal[4].CLK
clock => counterSignal[5].CLK
clock => counterSignal[6].CLK
clock => counterSignal[7].CLK
clock => counterSignal[8].CLK
clock => counterSignal[9].CLK
clock => counterSignal[10].CLK
clock => counterSignal[11].CLK
clock => \decode:Bnew.CLK
clock => \decode:Anew.CLK
clock => \decode:Bdebounce[0].CLK
clock => \decode:Bdebounce[1].CLK
clock => \decode:Bdebounce[2].CLK
clock => \decode:Bdebounce[3].CLK
clock => \decode:Bdebounce[4].CLK
clock => \decode:Bdebounce[5].CLK
clock => \decode:Bdebounce[6].CLK
clock => \decode:Bdebounce[7].CLK
clock => \decode:Bdebounce[8].CLK
clock => \decode:Bdebounce[9].CLK
clock => \decode:Bdebounce[10].CLK
clock => \decode:Adebounce[0].CLK
clock => \decode:Adebounce[1].CLK
clock => \decode:Adebounce[2].CLK
clock => \decode:Adebounce[3].CLK
clock => \decode:Adebounce[4].CLK
clock => \decode:Adebounce[5].CLK
clock => \decode:Adebounce[6].CLK
clock => \decode:Adebounce[7].CLK
clock => \decode:Adebounce[8].CLK
clock => \decode:Adebounce[9].CLK
clock => \decode:Adebounce[10].CLK
clock => \decode:Bprev.CLK
clock => \decode:Aprev.CLK
clock => \decode:positionCounter[0].CLK
clock => \decode:positionCounter[1].CLK
clock => \decode:positionCounter[2].CLK
clock => \decode:positionCounter[3].CLK
clock => \decode:positionCounter[4].CLK
clock => \decode:positionCounter[5].CLK
clock => \decode:positionCounter[6].CLK
clock => \decode:positionCounter[7].CLK
clock => \decode:positionCounter[8].CLK
clock => \decode:positionCounter[9].CLK
clock => \decode:positionCounter[10].CLK
clock => \decode:positionCounter[11].CLK
areset => \decode:Bdebounce[0].PRESET
areset => \decode:Bdebounce[1].PRESET
areset => \decode:Bdebounce[2].PRESET
areset => \decode:Bdebounce[3].PRESET
areset => \decode:Bdebounce[4].PRESET
areset => \decode:Bdebounce[5].PRESET
areset => \decode:Bdebounce[6].PRESET
areset => \decode:Bdebounce[7].PRESET
areset => \decode:Bdebounce[8].PRESET
areset => \decode:Bdebounce[9].PRESET
areset => \decode:Bdebounce[10].PRESET
areset => \decode:Adebounce[0].PRESET
areset => \decode:Adebounce[1].PRESET
areset => \decode:Adebounce[2].PRESET
areset => \decode:Adebounce[3].PRESET
areset => \decode:Adebounce[4].PRESET
areset => \decode:Adebounce[5].PRESET
areset => \decode:Adebounce[6].PRESET
areset => \decode:Adebounce[7].PRESET
areset => \decode:Adebounce[8].PRESET
areset => \decode:Adebounce[9].PRESET
areset => \decode:Adebounce[10].PRESET
areset => \decode:Bprev.ALOAD
areset => \decode:Aprev.ALOAD
areset => \decode:positionCounter[0].ACLR
areset => \decode:positionCounter[1].ACLR
areset => \decode:positionCounter[2].ACLR
areset => \decode:positionCounter[3].ACLR
areset => \decode:positionCounter[4].ACLR
areset => \decode:positionCounter[5].ACLR
areset => \decode:positionCounter[6].ACLR
areset => \decode:positionCounter[7].ACLR
areset => \decode:positionCounter[8].ACLR
areset => \decode:positionCounter[9].ACLR
areset => \decode:positionCounter[10].ACLR
areset => \decode:positionCounter[11].ACLR
areset => counterSignal[0].ENA
areset => \decode:Anew.ENA
areset => \decode:Bnew.ENA
areset => counterSignal[11].ENA
areset => counterSignal[10].ENA
areset => counterSignal[9].ENA
areset => counterSignal[8].ENA
areset => counterSignal[7].ENA
areset => counterSignal[6].ENA
areset => counterSignal[5].ENA
areset => counterSignal[4].ENA
areset => counterSignal[3].ENA
areset => counterSignal[2].ENA
areset => counterSignal[1].ENA
Ain => decode.IN1
Ain => decode.IN1
Ain => Anew.DATAB
Ain => \decode:Aprev.ADATA
Bin => decode.IN1
Bin => decode.IN1
Bin => Bnew.DATAB
Bin => \decode:Bprev.ADATA
position[0] <= counterSignal[0].DB_MAX_OUTPUT_PORT_TYPE
position[1] <= counterSignal[1].DB_MAX_OUTPUT_PORT_TYPE
position[2] <= counterSignal[2].DB_MAX_OUTPUT_PORT_TYPE
position[3] <= counterSignal[3].DB_MAX_OUTPUT_PORT_TYPE
position[4] <= counterSignal[4].DB_MAX_OUTPUT_PORT_TYPE
position[5] <= counterSignal[5].DB_MAX_OUTPUT_PORT_TYPE
position[6] <= counterSignal[6].DB_MAX_OUTPUT_PORT_TYPE
position[7] <= counterSignal[7].DB_MAX_OUTPUT_PORT_TYPE
position[8] <= counterSignal[8].DB_MAX_OUTPUT_PORT_TYPE
position[9] <= counterSignal[9].DB_MAX_OUTPUT_PORT_TYPE
position[10] <= counterSignal[10].DB_MAX_OUTPUT_PORT_TYPE
position[11] <= counterSignal[11].DB_MAX_OUTPUT_PORT_TYPE
position[12] <= counterSignal[11].DB_MAX_OUTPUT_PORT_TYPE
position[13] <= counterSignal[11].DB_MAX_OUTPUT_PORT_TYPE
position[14] <= counterSignal[11].DB_MAX_OUTPUT_PORT_TYPE
position[15] <= counterSignal[11].DB_MAX_OUTPUT_PORT_TYPE


